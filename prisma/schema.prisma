// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())

  users User[]
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  roleId    Int

  blogPosts BlogPost[] @relation("UserBlogPosts")
  comments  Comment[]
  Role      Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@map("users") // This maps the model to a table named "users"
}

model BlogPost {
  id          Int      @id @default(autoincrement())
  title       String
  content     String
  createdAt   DateTime @default(now())
  isPublished Boolean  @default(false)
  user        User     @relation("UserBlogPosts", fields: [createdBy], references: [id], onDelete: Cascade)
  createdBy   Int

  comments Comment[]
}

model Comment {
  id         Int      @id @default(autoincrement())
  message    String
  createdAt  DateTime @default(now())
  userId     Int
  blogPostId Int
  BlogPost   BlogPost @relation(fields: [blogPostId], references: [id], onDelete: Cascade)
  User       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
